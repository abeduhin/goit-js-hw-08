{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGqB,MAAfC,EAASC,SAASC,cAAc,kBAChCC,EAAUF,SAASC,cAAc,uBACjCE,EAAYH,SAASC,cAAc,4BAOdF,EAApBK,iBACH,SACA,EAAAP,EAAAQ,WAASC,IACP,MAAMC,EAAe,CAAEC,MAAON,EAAQO,MAAOC,QAASP,EAAUM,OAChEE,aAAaC,QAPM,sBAOoBC,KAAKC,UAAUP,GAAc,GACnE,MAIiHR,EAAjHK,iBAAiB,UAAUE,IAC9BA,EAAES,iBACFC,QAAQC,IAAI,CAAET,MAAON,EAAQO,MAAOC,QAASP,EAAUM,QACvDV,EAAOmB,QACPP,aAAaQ,WAhBQ,sBAgBoB,IAKR,MAU7BC,EAVK,CAAAC,IACT,IACE,MAAMC,EAAkBX,aAAaY,QAAQF,GAC7C,OAA2B,OAApBC,OAA2BE,EAAYX,KAAKY,MAAMH,E,CACzD,MAAOI,GACPV,QAAQU,MAAM,oBAAqBA,EAAMhB,Q,GAKzBiB,CA/BG,uBAgCnBP,IACFlB,EAAQO,MAAQW,EAAYZ,MAC5BL,EAAUM,MAAQW,EAAYV","sources":["src/js/03-feedback.js"],"sourcesContent":["import { throttle } from 'lodash';\n// Підключаємо бібліотеку lodash.throttle\n\nconst formEl = document.querySelector('.feedback-form');\nconst emailEl = document.querySelector('input[name=\"email\"]');\nconst messageEl = document.querySelector('textarea[name=\"message\"]');\n// Звертаємось до класу feedback-form\n// Звертаємось до тегу input - name \"email\"\n// Звертаємось до тегу textarea - name \"message\"\nconst LOCALSTORAGE_KEY = 'feedback-form-state';\n// Присваємо ключ до сховища - рядок 'feedback-form-state'\n\nformEl.addEventListener(\n    'input',\n    throttle(e => {\n      const objectToSave = { email: emailEl.value, message: messageEl.value };\n      localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(objectToSave));\n    }, 500)\n  );\n// Відстежуємо подію input та записуємо у локальне сховище об'єкт з полями email і message, у яких зберігаємо поточні значення полів форми localStorage з оновленням в пів секунди (500 мс)\n\nformEl.addEventListener('submit', e => {\n    e.preventDefault();\n    console.log({ email: emailEl.value, message: messageEl.value });\n    formEl.reset();\n    localStorage.removeItem(LOCALSTORAGE_KEY);\n  })\n\n// Відстежуємо подію submit та видаляємо з хранилища\n\nconst load = key => {\n    try {\n      const serializedState = localStorage.getItem(key);\n      return serializedState === null ? undefined : JSON.parse(serializedState);\n    } catch (error) {\n      console.error('Get state error: ', error.message);\n    }\n  };\n  // Обробка помилок\n  \n  const storageData = load(LOCALSTORAGE_KEY);\n  if (storageData) {\n    emailEl.value = storageData.email;\n    messageEl.value = storageData.message;\n  }\n  // Перевірка при загрузці сторінки\n"],"names":["$kEUo3","parcelRequire","$945622fd0f572e60$var$formEl","document","querySelector","$945622fd0f572e60$var$emailEl","$945622fd0f572e60$var$messageEl","addEventListener","throttle","e","objectToSave","email","value","message","localStorage","setItem","JSON","stringify","preventDefault","console","log","reset","removeItem","$945622fd0f572e60$var$storageData","key","serializedState","getItem","undefined","parse","error","$945622fd0f572e60$var$load"],"version":3,"file":"03-feedback.7bb1b775.js.map"}